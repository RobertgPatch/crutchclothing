<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
 	
 	<tx:annotation-driven/>
	<!-- MySQL data source -->
	<!--

	-->
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" > 
		
		<!--  
        <property name="driverClassName" value="com.google.appengine.api.rdbms.AppEngineDriver" /> 
        <property name="url" value="jdbc:google:rdbms://astute-psyche-88208:google-crutch-db/crutch " />
        <property name="username" value="root" /> 
         --> 
        
        <property name="driverClassName" value="com.mysql.jdbc.Driver" /> 
        <property name="url" value="jdbc:mysql://173.194.250.119:3306/crutch " />
        <property name="username" value="crutch" /> 
        <property name="password" value="admin" />
       
    </bean> 
	

	<!-- Hibernate session factory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<!--  
		<property name="configurationClass">
            <value>org.hibernate.cfg.AnnotationConfiguration</value>
        </property>
        -->
		<property name="hibernateProperties">
		    <props>
			<prop key="hibernate.dialect">
                           org.hibernate.dialect.MySQL5Dialect
                        </prop>
			               
			<prop key="hibernate.show_sql">true</prop>  
			<prop key="hibernate.format_sql">true</prop>                      
            <!-- 
            <prop key="hibernate.max_fetch_depth">3</prop>
            <prop key="hibernate.jdbc.fetch_size">50</prop>
            <prop key="hibernate.jdbc.batch_size">10</prop>
            <prop key="hibernate.show_sql">true</prop>
            <prop key="hibernate.hbm2ddl.auto">update</prop> 
             -->            
            <!-- <prop key="hibernate.hbm2ddl.auto">update</prop>  -->
            <!-- 
			<prop key="hibernate.format_sql">true</prop>
			<prop key="hibernate.auto_close_session">true</prop>
			 -->
		    </props>
		</property>
		
		<property name="packagesToScan" value="com.crutchclothing" />
		
		<!-- 
		<property name="annotatedClasses">
            <list>
                <value>com.crutchclothing.cart.model.Cart</value>
                <value>com.crutchclothing.cart.model.CartProduct</value>
                <value>com.crutchclothing.cart.model.CartProductRef</value>
                <value>com.crutchclothing.inventory.Inventory</value>
                <value>com.crutchclothing.orders.model.Order</value>
                <value>com.crutchclothing.orders.model.OrderLine</value>
                <value>com.crutchclothing.products.model.Category</value>
                <value>com.crutchclothing.products.model.Product</value>
                <value>com.crutchclothing.products.model.ProductDetail</value>
                <value>com.crutchclothing.users.model</value>
                <value>com.crutchclothing.users.model.Address</value>
                <value>com.crutchclothing.users.model.User</value>
                <value>com.crutchclothing.users.model.UserRole</value>                
            </list>
        </property>
		 -->
	</bean>
	
	<bean id="userDao" class="com.crutchclothing.users.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="productDao" class="com.crutchclothing.products.dao.ProductDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="cartDao" class="com.crutchclothing.cart.dao.CartDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>	
 
	<bean id="myUserDetailsService" 
                class="com.crutchclothing.users.service.MyUserDetailsService">
		<property name="userDao" ref="userDao" />
	</bean>
	
	<bean id="userService"
				class="com.crutchclothing.users.service.UserService">
		<property name="userDao" ref="userDao" />
	</bean>
	
	
	<bean id="passwordEncoder"
				class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>
 
	<!-- MUST have transaction manager, using aop and aspects  -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		p:sessionFactory-ref="sessionFactory">
	</bean>
 
	<bean id="persistenceExceptionTranslationPostProcessor"
    class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
</beans>